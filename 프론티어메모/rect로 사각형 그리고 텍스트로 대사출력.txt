#include <stdio.h>
#include <SFML/Graphics.hpp>
#include <stdlib.h>
#include <time.h>
#include <SFML/Audio.hpp>
#include <iostream>
#include <stdio.h>
using namespace std;

using namespace sf;

struct Textures {
	Texture title_bg;

	Texture start_btn_def;
	Texture quit_btn_def;
	Texture start_btn_sel;
	Texture home_bg;

	Texture start_btn_prs;
	Texture quit_btn_sel;
	Texture quit_btn_prs;

	Texture main_ch_front;

};

struct Button {
	RectangleShape sprite;
};

struct Player {
	RectangleShape sprite;
	int speed;
};


const int W_WIDTH = 1920, W_HEIGHT = 1080;

int main(void) {
	cout << "Hello World" << endl;
	printf("Hello c++");

	Vector2i mouse_pos;
	int layer = 0;
	
	//시점 고정
	View view;
	view.setCenter(Vector2f(W_WIDTH / 2, W_HEIGHT / 2));
	view.setSize(Vector2f(W_WIDTH, W_HEIGHT));

	//사진 로드
	struct Textures tex;
	tex.title_bg.loadFromFile("./resource/images/background/title_img.png");
	tex.home_bg.loadFromFile("./resource/images/background/map_home.png");

	tex.start_btn_def.loadFromFile("./resource/images/btn/title_start_default.png");
	tex.start_btn_sel.loadFromFile("./resource/images/btn/title_start_selected.png");
	tex.start_btn_prs.loadFromFile("./resource/images/btn/title_start_pressed.png");
	tex.quit_btn_def.loadFromFile("./resource/images/btn/title_exit_default.png");
	tex.quit_btn_sel.loadFromFile("./resource/images/btn/title_exit_selected.png");
	tex.quit_btn_prs.loadFromFile("./resource/images/btn/title_exit_pressed.png");

	tex.main_ch_front.loadFromFile("./resource/images/character/main_ch/ch_f_x.png");
	

	RenderWindow window(VideoMode(W_WIDTH, W_HEIGHT), "Frontier");
	window.setFramerateLimit(60);
	
	//배경
	Sprite title;
	title.setTexture(tex.title_bg);
	title.setPosition(0, 0);

	Sprite home;
	home.setTexture(tex.home_bg);
	home.setPosition(0, 0);

	//플레이어
	struct Player player;
	player.sprite.setTexture(&tex.main_ch_front);
	player.sprite.setSize(Vector2f(150, 150));
	player.sprite.setPosition(W_WIDTH / 2 - 75, W_HEIGHT / 2 - 75);
	player.speed = 9;

	// 폰트 불러오기
	sf::Font font;
	if (!font.loadFromFile("arial.ttf"))//프로젝트와 같은 폴더에 위치
	{
	}
	// 대화창
	sf::RectangleShape rectangle(sf::Vector2f(800, 200));
	rectangle.setPosition(220, 190);
	rectangle.setFillColor(sf::Color::White);
	rectangle.setOutlineThickness(2);
	rectangle.setOutlineColor(sf::Color::Black);
	
	// 대화창 내용
	sf::Text text("what is wrong", font);
	text.setCharacterSize(24);
	text.setFillColor(sf::Color::Red);



	while (window.isOpen()) {		//윈도우가 열려있는 동안
		Event event;
		mouse_pos = Mouse::getPosition(window);

		//시작 버튼
		struct Button start_button;
		start_button.sprite.setTexture(&tex.start_btn_def);
		start_button.sprite.setSize(Vector2f(400, 120));
		start_button.sprite.setPosition(W_WIDTH/2-200, 500);
		if (start_button.sprite.getGlobalBounds().contains(mouse_pos.x, mouse_pos.y)) {
			start_button.sprite.setTexture(&tex.start_btn_sel);
		}
		if (start_button.sprite.getGlobalBounds().contains(mouse_pos.x, mouse_pos.y) && Mouse::isButtonPressed(Mouse::Left)) {
			start_button.sprite.setTexture(&tex.start_btn_prs);
			layer = 1;
		}

		//종료 버튼
		struct Button quit_button;
		quit_button.sprite.setTexture(&tex.quit_btn_def);
		quit_button.sprite.setSize(Vector2f(400, 120));
		quit_button.sprite.setPosition(W_WIDTH / 2 - 200, 630);
		if (quit_button.sprite.getGlobalBounds().contains(mouse_pos.x, mouse_pos.y)) {
			quit_button.sprite.setTexture(&tex.quit_btn_sel);
		}
		if (quit_button.sprite.getGlobalBounds().contains(mouse_pos.x, mouse_pos.y) && Mouse::isButtonPressed(Mouse::Left)) {
			quit_button.sprite.setTexture(&tex.quit_btn_prs);

			return 0;
		}


		//플레이어 이동
			if (Keyboard::isKeyPressed(Keyboard::Left) && layer == 1) {
				view.move(-player.speed, 0);
				player.sprite.move(-player.speed, 0);

				while(1){
					// 대화창,대사
					window.clear(sf::Color(0,0,0,100)); //rgb,투명도
					window.draw(rectangle);
					window.draw(text);
					window.display();
					if (Keyboard::isKeyPressed(Keyboard::Space) && layer == 1)//스페이스바를 누르면 대화창이 닫힘
						break;
				}
			}
			if (Keyboard::isKeyPressed(Keyboard::Right) && layer == 1) {
				view.move(player.speed, 0);
				player.sprite.move(player.speed, 0);
			}
			if (Keyboard::isKeyPressed(Keyboard::Up) && layer == 1) {
				view.move(0, -player.speed);
				player.sprite.move(0, -player.speed);
			}
			if (Keyboard::isKeyPressed(Keyboard::Down) && layer == 1) {
				view.move(0, player.speed);
				player.sprite.move(0, player.speed);
			}
			


		while (window.pollEvent(event)) {	//윈도우 창 닫기
			switch (event.type) {
				case Event::Closed:
					window.close();
					break;
			}

		}

		window.setView(view);

		window.clear(Color::Black);

		if (layer == 0) {
			window.draw(title);
			window.draw(start_button.sprite);
			window.draw(quit_button.sprite);
		}

		if (layer == 1) {
			window.draw(home);
			window.draw(player.sprite);
		}

		window.display();
	}

}